import React, { useState, useEffect } from "react";
import HeaderFooter from "../Component/Header/HeaderFooter";
import {GrFormNextLink} from "react-icons/gr"
import {BiSolidUpArrow, BiSolidDownArrow} from "react-icons/bi"
import {BsArrowRightCircle} from "react-icons/bs"
const Coins = () => {
  const [coins, setCoins] = useState([]);
  const [loading, setLoading] = useState(false);
  const [searchTerm, setsearchTerm] = useState("")
  const [page, setPage] = useState(1);
  const coinsPerPage = 14;



  useEffect(() => {
    const fetchCoins = async () => {
      setLoading(true);

      try {
        const response = await fetch(
          `https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=${coinsPerPage}&page=${page}&sparkline=false`,
          
          {
            method: "GET",
            headers: {
              Accept: "application/json",
              "Content-Type": "application/json",
            },
          }
        );

        const data = await response.json();

        if (response.ok) {
          setCoins(data);
          console.log(data);
        } else {
          console.error("Error fetching data:", data);
        }
      } catch (error) {
        console.error("Error:", error);
      }

      setLoading(false);
    };

    fetchCoins();
  }, [page]);

  
  

    



  return (
    <div className="text-white  containe ">
     

      {loading ? (
        <p>Loading...</p>
      ) : (
        <div>
          <section >
            
          <section className="flex justify-between  py-4 px-4">

         <h2 className="text-3xl font-bold mb-4 text-slate-200">Coins</h2>
         <div className='w-[2.8rem] h-[2.8rem] rounded-full bg-red-400'></div>
          </section>
          <section className="input mb-[2rem] flex justify-center px-4">
          <input class="placeholder:italic placeholder:text-slate-400 
          block bg-gray-800 w-full border border-slate-800 
          py-2 pl-9 pr-3 shadow-sm focus:outline-none focus:border-sky-500 rounded-[20px]
          focus:ring-sky-500 focus:ring-1 sm:text-sm" placeholder="Search for coins..."
          type="search" name="search" value={searchTerm} onChange={(e)=>setsearchTerm(e.target.value) } />
          
          </section>
          </section>
          <ul className="flex flex-wrap  gap-3 justify-center ">
            {coins.map((coin) => (
              <li key={coin.id} className="coin-card bg-gray-800 shadow-lg rounded-[18px] 
              w-[165px]
              p-4 mb-[.4rem]">
                <figure>
                  <section>
                    <div className="coin-img-container w-[130px] xs:w-[110px]  ">
                      <img
                        src={coin.image}
                        alt={coin.name}
                        className=" h-full rounded imageCoin"
                      />
                    </div>
                    <div className="flex space-x-2 pt-3 ">

                    <h3 className="xs:text-[15px] font-medium ">{coin.name}</h3>
                    <h3 className="xs:text-[15px]  font-semibold capitalize ">({coin.symbol})</h3>
                    </div>

                    <div className="flex space-x-4">

                
                    <p className="text-sm">${coin.current_price.toFixed(2)}</p>
                    <p className="text-sm">
                      {coin.price_change_24h < 0 ? (
                        <div className="flex mb-2 ">

                        <p className="text-red-500 text-[10px]">{coin.price_change_24h.toFixed(2)}% 
                        </p>
                        <span className="text-red-500 text-[10px]"><BiSolidDownArrow /></span>
                        </div>
                         
                      ):(
                        <div className="flex mb-2  text-green-500">

                        <p className="text-green-500 text-[10px]">{coin.price_change_24h.toFixed(2)}%</p>
                        <p className="text-green-500 text-[10px]"><BiSolidUpArrow /></p> 
                        </div>
                      )}
                      
                      </p>
                      </div>
                      <div className="flex justify-center">

                     
                      <span className="text-[1.2rem] text-slate-200"> <BsArrowRightCircle /></span>
                      </div>
                  </section>
                </figure>
              </li>
            ))}
          </ul>
          <div className="mt-4 flex justify-center gap-4 mb-[10rem]">
            <button
              onClick={() => setPage((prev) => prev - 1)}
              disabled={page === 1}
              className="bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded"
            >
              Previous
            </button>
            <button 
              onClick={() => setPage((prev) => prev + 1)}
              className="bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded"
            >
              Next
            </button>
          </div>
        </div>
      )}

      <HeaderFooter />
    </div>
  );
};

export default Coins;





